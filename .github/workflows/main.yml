name: Build and Deploy to Cloudhub

on:
  push:
    branches: [ dev]
  pull_request:
    branches: [ stg,prod ]
  workflow_dispatch:
  workflow_call:
    
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      envName: ${{ secrets.ENVNAME }}
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v3
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: 8
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Upload artifact 
      uses: actions/upload-artifact@v3
      with:
          name: artifacts
          path: target/*.jar
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:    
    - name: Checkout this repo
      uses: actions/checkout@v3
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - uses: actions/download-artifact@v3
      with:
        name: artifacts
    - name: Deploy to Sandbox
      env:
        ENVNAME: ${{ secrets.ENVNAME }}
        CLIENTIDCONNECTEDAPP: ${{ secrets.CLIENTIDCONNECTEDAPP }}
        CLIENTSECRETCONNECTEDAPP: ${{ secrets.CLIENTSECRETCONNECTEDAPP }}
        GRANTTYPECONNECTEDAPP: ${{ secrets.GRANTTYPECONNECTEDAPP }}
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn deploy -Dmule.artifact=$artifactName \
         -DenvName="$ENVNAME" \
         -DclientIdConnectedApp="$CLIENTIDCONNECTEDAPP" \
         -DclientSecretConnectedApp="$CLIENTSECRETCONNECTEDAPP" \
         -DgrantTypeConnectedApp="$GRANTTYPECONNECTEDAPP" \
         -DskipTests \
         -DmuleDeploy
